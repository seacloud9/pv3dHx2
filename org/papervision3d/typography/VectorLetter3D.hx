package org.papervision3d.typography {	import org.papervision3d.core.geom.renderables.Vertex3D;	import org.papervision3d.materials.special.Letter3DMaterial;	import org.papervision3d.objects.special.VectorShape3D;			/**	 * @author Mark Barcinski	 */	class VectorLetter3D extends VectorShape3D implements Letter3D {		private var _width:Float;		private var _height:Float;		private var _char:String;		private var _font:Font3D;				public function new(char:String , material:Letter3DMaterial , font:Font3D){			this._char=char;			this._font=font;						super(material , null);			getLetterFromFont();						//center vertices & flip vertically			for(var v:Vertex3D in geometry.vertices)			{				// center				v.x -=_width/2;				v.y -=_height/2;								// flip 				v.y *=-1;			}		}				private function getLetterFromFont():Void		{			_width=_font.widths[_char];			_height=_font.height;						createVertices(_font.motifs[_char]);		}		private function createVertices(motif:Array):Void		{			for(i in 0...motif.length){				switch(motif[i][0])				{					case "M":						graphics.moveTo(motif[i][1][0], motif[i][1][1]);						break;					case "L":						graphics.lineTo(motif[i][1][0], motif[i][1][1]);						break;					case "C":						graphics.curveTo(motif[i][1][0], motif[i][1][1], motif[i][1][2], motif[i][1][3]);						break;				}			}		}				public var width(get_width, set_width):Float;
 	private function get_width():Float {			return _width;		}				private function set_width(value:Float):Void {			_width=value;		}				public var height(get_height, set_height):Float;
 	private function get_height():Float {			return _height;		}				private function set_height(height:Float):Void {			_height=height;		}				public var char(get_char, set_char):String;
 	private function get_char():String {			return _char;		}				private function set_char(value:String):Void {			_char=value;		}				public var font(get_font, set_font):Font3D;
 	private function get_font():Font3D {			return _font;		}				private function set_font(value:Font3D):Void {			_font=value;		}	}