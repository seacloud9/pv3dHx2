package org.papervision3d.core.render.command {	import flash.events.Event;			import org.papervision3d.view.Viewport3D;			import flash.display.Sprite;		/**	 * @author Mark Barcinski	 */	class VectorShapeHitTest extends Sprite {		private static var _instance:VectorShapeHitTest;		private var viewport:Viewport3D;		static public var instance(get_instance, null):VectorShapeHitTest;
 	private function get_instance():VectorShapeHitTest		{			if(_instance==null)_instance=new VectorShapeHitTest();						_instance.alpha=0;			_instance.mouseEnabled=false;			return _instance;		}				public function new(){					}				public function assignViewport(viewport:Viewport3D):Void {			instance.viewport=viewport;						instance.x=viewport.containerSprite.x;			instance.y=viewport.containerSprite.y;						viewport.addChild(_instance);			try {				viewport.stage.addEventListener(Event.RESIZE, onStageResized);			} catch(e:Dynamic){				// TODO add onAddedToStage				}		}				private function onStageResized(event:Event):Void {			_instance.x=viewport.containerSprite.x;			_instance.y=viewport.containerSprite.y;		}		override public function hitTestPoint(x:Float, y:Float, shapeFlag:Bool=false):Bool{			if(viewport){				return super.hitTestPoint(x + viewport.containerSprite.x,  y + viewport.containerSprite.y, shapeFlag);				}						//if there is no viewport, shapeFlag has to be false or it will never return a hit			return super.hitTestPoint(x,  y, false);			}	}